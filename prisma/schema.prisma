generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Enum for user roles
enum AccessType {
  SUPER_ADMIN
  ADMIN
  MEMBER
  GUEST
}

// Enum for account status
enum Status {
  ACTIVE
  INACTIVE
  SUSPENDED
}

// Enum for integration providers
enum IntegrationProvider {
  LINKEDIN
}

// Organisation model
model Organisation {
  id           String        @id @default(uuid())
  name         String
  status       Status        @default(ACTIVE)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  users        User[]
  integrations Integration[]

  @@index([id])
}

// User model
model User {
  id             String       @id @default(uuid())
  email          String       @unique
  firstName      String
  lastName       String
  password       String
  status         Status       @default(ACTIVE)
  // sessionId      String?
  authMethod     String
  organisationId String
  accessType     AccessType   @default(SUPER_ADMIN) // ! change it
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  organisation   Organisation @relation(fields: [organisationId], references: [id])

  @@index([organisationId])
  @@index([id])
}

// Integration model
model Integration {
  id             String              @id @default(uuid())
  organisationId String
  provider       IntegrationProvider
  accessToken    String              @db.Text // Supports long tokens
  refreshToken   String?             @db.Text @default("") // Optional and supports long tokens
  expiresAt      DateTime
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
  organisation   Organisation        @relation(fields: [organisationId], references: [id])

  @@index([organisationId])
  @@index([id])
}
