generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String      @id @default(uuid())
  name          String?
  email         String      @unique
  password      String
  emailVerified DateTime?
  image         String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  // Relations
  memberships   Membership[]  // Organisations user is part of
  ownedOrgs     Organisation[] // Organisations user owns
  sessions      Session[]

  @@map("user")
}

model Organisation {
  id            String      @id @default(uuid())
  name          String
  slug          String      @unique
  image         String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  // Relations
  owner         User        @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId       String
  members       Membership[]
  sessions      Session[]

  @@map("organisation")
}

model Membership {
  id            String      @id @default(uuid())
  role          Role        @default(MEMBER)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  // Relations
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  organisation  Organisation @relation(fields: [organisationId], references: [id], onDelete: Cascade)
  organisationId String

  @@unique([userId, organisationId]) // User can only have one role per organisation
  @@map("membership")
}

model Session {
  id            String      @id @default(uuid())
  sessionToken  String      @unique
  expiresAt     DateTime
  createdAt     DateTime    @default(now())
  
  // Relations
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  organisation  Organisation? @relation(fields: [organisationId], references: [id], onDelete: SetNull)
  organisationId String?

  @@index([userId])
  @@map("session")
}

enum Role {
  OWNER
  ADMIN
  MEMBER
}